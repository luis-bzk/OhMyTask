@use "../base/variables"as v;
@use "../base/mixins"as m;

.container-new-task {
  @include m.min_tablet {
    display: flex;
    justify-content: end;
  }

  .button-add-task {

    @include m.max_tablet {
      @include m.button_input(v.$xblue, v.$white, "block");
    }

    @include m.min_tablet {
      @include m.button(v.$xblue, v.$white, "inline-block");
    }
  }
}

.tasks-list {
  list-style: none;
  padding: 0;
  margin-top: 5rem;

  display: flex;
  gap: 1rem;
  flex-direction: column;
}

.task {
  padding: 2rem 0;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  border-bottom: solid 1px v.$xgrayB;

  &:last-of-type {
    border-bottom: none;
  }

  @include m.min_tablet {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  &__options {
    // background-color: v.$red;
    display: flex;
    align-items: center;
    justify-content: space-between;

    @include m.min_tablet {
      gap: 2rem;
    }
  }

  &-state,
  &-delete {
    border: none;
    border-radius: 1rem;
    padding: .5rem 1rem;
    color: v.$black;
    // transition-property: background-color, transform;
    // transition-duration: .2s;
    transition: .2s;

    &:hover {
      transform: scale(0.95);
    }
  }

  &-state {

    &.complete {
      background-color: lighten($color: v.$blue, $amount: 5%);

      &:hover {
        background-color: darken($color: v.$blue, $amount: 5%);
      }
    }

    &.pending {
      background-color: lighten($color: v.$orange, $amount: 5%);

      &:hover {
        background-color: darken($color: v.$orange, $amount: 5%);
      }
    }
  }

  &-delete {
    background-color: lighten($color: v.$red, $amount: 10%);

    &:hover {
      background-color: v.$red;
    }
  }
}